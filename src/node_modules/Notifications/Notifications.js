import { useEffect, useRef, useState } from "react"
import { Placement, Card, CardContent, Title, Description } from './Notifications.styled'
import { v4 as uuid } from 'uuid'
import { motion, AnimatePresence } from "framer-motion"

const DEFAULT_TIME = 5000

export function useNotifications() {
  const [messages, setMessages] = useState([])
  const timers = useRef({})

  const notify = ({ title, description, time }, _id) => {
    const message = {
      title,
      description,
      time: time || DEFAULT_TIME,
      id: _id || uuid()
    }
    setMessages(m => [message].concat(m))
  }
  const discard = (id) => setMessages(m => m.filter(mm => mm.id !== id))

  useEffect(() => {
    messages.forEach((message) => {
      if (timers.current[message.id]) return

      const timer = setTimeout(() => discard(message.id), message.time)
      timers.current[message.id] = timer
    })

    return () => {
      Object.keys(timers.current)
        .forEach(timer => clearTimeout(timer))
    }
  }, [messages])

  return { messages, discard, notify }
}

export function Notifications({ value, onDiscard }) {
  return (
    <Placement>
      <AnimatePresence>
        {value.map(item => (
          <motion.div
            key={item.id}
            style={{ position: 'relative' }}
            initial={{ opacity: 0, bottom: '30px' }}
            animate={{ opacity: 1, bottom: 0 }}
            exit={{ opacity: 0, bottom: '30px' }}
          >
            <Card onClick={() => onDiscard(item.id)}>
              <CardContent>
                <Title>{item.title}</Title>
                {Array.isArray(item.description)
                  ? item.description.map((d, i) => <Description key={i}>{d}</Description>)
                  : <Description>{item.description}</Description>
                }
              </CardContent>
            </Card>
          </motion.div>
        ))}
      </AnimatePresence>
    </Placement>
  )
}
